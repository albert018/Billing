@model Model.DailyBillingDTO

@{
    Layout = null;
}

<!DOCTYPE html>

<html ng-app="DailyBillingEdit">
<head>
    <meta name="viewport" content="width=device-width" />
    <title>DailyBillingEdit</title>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/angularjs")
    <script>
        var scope = angular.module("DailyBillingEdit", []);

        scope.controller("mainCont", function cont() {
            var main= this;
            main.NgModel=@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.BillTags));
    
            main.Add= function(){
                var t= {Serial: "",BillTagName: "C"};
                main.NgModel.push(t);
            };
        });
    </script>
</head>
<body ng-controller="mainCont as main">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal">
            <h4>DailyBilling</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Serial, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Serial, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Serial, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.BillDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.BillDate, "{0:yyyy-MM-dd}", new { @type= "date" } )
                    @Html.ValidationMessageFor(model => model.BillDate, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.BillType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BillType, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BillType, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group" >
                @Html.LabelFor(model => model.BillTags, htmlAttributes: new { @class = "control-label col-md-2" })
                @*<div class="col-md-10">
                    @for (int i = 0; i < Model.BillTags.Count(); i++)
                    {
                        @Html.EditorFor(model => model.BillTags);
                        <br/>
                    }
                </div>*@
                <div ng-repeat="item in main.NgModel">
                    <input type="text" name="BillTags[{{$index}}].BillTagName" ng-model="item.BillTagName" />
                    @Html.ValidationMessageFor(model => model.BillTags.First().BillTagName);
                </div>
                <input type="button" value="Add" ng-click="main.Add();" />
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>
